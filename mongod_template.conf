systemLog:
    #MongoDB发送所有日志输出的目标指定为文件，若不指定，则输出在控制台，即非持久化
    #The path of the log file to which mongod or mongos should send all diagnostic logging information
    destination: file
    #mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径
    path: "/usr/local/mongo/mongodb-linux-x86_64-4.0.10/single/log/mongod.log"
    #当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾
    logAppend: true
storage:
    #mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod
    #The directory where the mongod instance stores its data.Default value is "/data/db".
    dbPath: "/usr/local/mongo/mongodb-linux-x86_64-4.0.10/single/data/db"
    journal:
        #启动或禁用持久性日志以确保数据文件保持有效和可恢复
        enabled: true
processManagement:
    #启用在后台运行mongos或mongod进程的守护进程模式
    fork: true
    #指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID
    pidFilePath: "/usr/local/mongo/mongodb-linux-x86_64-4.0.10/single/log/mongod.pid"
net:
    #服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是IP
    #bindIpAll: true

    #服务实例绑定的IP，默认是localhost
    bindIp: localhost,192.168.253.129
    #bindIp
    #绑定的端口，默认是27017
    port: 27017

##以下命令行将在使用副本集（类似主从复制）的时候使用
#replication:
#    #副本集的名称
#    replSetName: myrs

##创建分片集群
#sharding:
#    #分片角色
#    clusterRole: shardsvr/configsvr

#创建路由，若本文件用于配置路由，则不需要写上面的replication和/data/db那个目录，别的都得写
sharding:
    #指定配置节点副本集
    configDB: myrs/192.168.253.129:27019,192.168.253.129:27119,192.168.253.129:27219

#开启认证，注意，在给路由配置这个选项的时候是不需要authorization这个字段的
security:
    authorization: enabled
    #KeyFile鉴权文件，openssl可以直接生成公钥和私钥，具体的百度一下
    keyFile: /.../mongo.keyfile

####################################
mongos比mongod少了authorization：enabled的配置。原因是，副本集加分片的安全认证需要配置
两方面的，副本集各个节点之间使用内部身份验证，用于内部各个mongo实例的通信，只有相同keyfile
才能相互访问。所以都要开启 keyFile:
    keyFile: /.../mongo.keyfile
然而对于所有的mongod，才是真正的保存数据的分片。mongos只做路由，不保存数据。所以所有的
mongod开启访问数据的授权authorization:enabled。这样用户只有账号密码正确才能访问到数据。
####################################
